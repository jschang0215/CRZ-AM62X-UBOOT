mtdids=spi-nand0=spi-nand0,nand0=omap2-nand.0
mtdparts=mtdparts=spi-nand0:512k(ospi.tiboot3),2m(ospi.tispl),4m(ospi.u-boot),256k(ospi.env),256k(ospi.env.backup),98048k@32m(ospi.rootfs),256k@130816k(ospi.phypattern);omap2-nand.0:2m(NAND.tiboot3),2m(NAND.tispl),2m(NAND.tiboot3.backup),4m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup),-(NAND.file-system)
nandargs=setenv bootargs console=${console}
	${optargs}
	root=${nandroot}
	rootfstype=${nandrootfstype}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system
nandrootfstype=ubifs rootwait
nandboot=echo Booting from nand ...;
	run nandargs;
	nand read ${fdtaddr} NAND.u-boot-spl-os;
	nand read ${loadaddr} NAND.kernel;
	bootz ${loadaddr} - ${fdtaddr}

nbootpart=NAND.file-system
nbootvolume=ubi0:rootfs
ubi_init=ubi part ${nbootpart}; ubifsmount ${nbootvolume};
args_nand=setenv bootargs console=${console}
	${optargs} ubi.mtd=${nbootpart}
	root=${nbootvolume} rootfstype=ubifs
init_nand=run args_all args_nand ubi_init
get_fdt_nand=ubifsload ${fdtaddr} ${bootdir}/dtb/${fdtfile};
get_overlay_nand=
	fdt address ${fdtaddr};
	fdt resize 0x100000;
	for overlay in $name_overlays;
	do;
	ubifsload ${dtboaddr} ${bootdir}/dtb/${overlay} &&
	fdt apply ${dtboaddr};
	done;
get_kern_nand=ubifsload ${loadaddr} ${bootdir}/${name_kern}
get_fit_nand=ubifsload ${addr_fit} ${bootdir}/${name_fit}
